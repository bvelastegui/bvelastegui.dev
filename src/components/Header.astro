<header class="sticky top-0 z-40 backdrop-blur-lg">
  <div class="max-w-4xl mx-auto flex flex-wrap items-center justify-center md:justify-between gap-4 px-6 py-4">
    <a href="/" class="text-2xl font-bold flex items-baseline gap-1 select-none text-shadow-lg/30">
      <span class="text-white">Bryan</span><span class="text-accent text-3xl leading-none">.</span>
    </a>
    <nav class="flex items-center text-base font-medium">
      <a
        href="/#about"
        class="transition-colors duration-300 text-white hover:text-accent px-4 py-1 border-b-2 border-transparent hover:border-accent"
      >
        About
      </a>
      <a
        href="/#experience"
        class="transition-colors duration-300 text-white hover:text-accent px-4 py-1 border-b-2 border-transparent hover:border-accent"
      >
        Experience
      </a>
      <a
        href="/#contact"
        class="transition-colors duration-300 text-white hover:text-accent px-4 py-1 border-b-2 border-transparent hover:border-accent"
      >
        Contact
      </a>
    </nav>
  </div>
</header>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const navLinks = document.querySelectorAll("header nav a");
    const sections = document.querySelectorAll("main section");

    window.onscroll = () => {
      sections.forEach((section) => {
        const top = window.scrollY;
        const offset = section.offsetTop;
        const height = section.offsetHeight;
        const id = section.getAttribute("id");

        if (top >= offset && top <= offset + height) {
          navLinks.forEach((link) => {
            link.classList.remove("border-accent");
            link.classList.add("border-transparent");
            let activeElement = document.querySelector(
              `header nav a[href*="/#${id}"]`,
            );
            if (activeElement) {
              activeElement.classList.remove("border-transparent");
              activeElement.classList.add("border-accent");
              document.querySelector("main nav")?.scrollTo({
                left: activeElement.offsetLeft - 160,
                behavior: "smooth",
              });
            }
          });
        }
      });
    };
  });
</script>