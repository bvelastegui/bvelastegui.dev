---
// ProjectCard.astro - Reusable project card component
import type { CollectionEntry } from "astro:content";

interface Props {
  project?: CollectionEntry<"projects">;
  slug: string;
  title: string;
  description: string;
  image?: string;
  technologies: string[];
}

const { slug, title, description, image, technologies } = Astro.props;
---

<div
  class="overflow-hidden rounded-lg border border-[var(--color-border)] bg-[var(--color-background-alt)] shadow-sm transition-shadow hover:shadow-md"
>
  <div
    class="flex h-48 items-center justify-center bg-[var(--color-primary-light)]"
  >
    {image ? (
      <img 
        src={image} 
        alt={title} 
        class="h-full w-full object-cover"
      />
    ) : (
      <span class="text-xl text-white">Project Image</span>
    )}
  </div>
  <div class="p-6">
    <h3 class="mb-2 text-xl font-bold text-[var(--color-primary)]">
      {title}
    </h3>
    <p class="mb-4 text-[var(--color-text-muted)]">
      {description}
    </p>
    <div class="mb-4 flex flex-wrap gap-2">
      {
        technologies.map((tech) => (
          <span class="rounded-full bg-[var(--color-secondary-light)] px-2 py-1 text-xs text-[var(--color-primary-dark)]">
            {tech}
          </span>
        ))
      }
    </div>
    <a
      href={`/projects/${slug}`}
      class="font-medium text-[var(--color-primary)] hover:text-[var(--color-primary-dark)]"
      >View Project â†’</a
    >
  </div>
</div>
