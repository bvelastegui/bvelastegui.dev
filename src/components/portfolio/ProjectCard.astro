---
// ProjectCard.astro - Reusable project card component
interface Props {
  projectNumber: number;
  technologies: string[];
}

const { projectNumber, technologies = ["React", "Node.js", "MongoDB"] } = Astro.props;
---

<div class="bg-[var(--color-background-alt)] rounded-lg overflow-hidden border border-[var(--color-border)] shadow-sm hover:shadow-md transition-shadow">
  <div class="h-48 bg-[var(--color-primary-light)] flex items-center justify-center">
    <span class="text-white text-xl">Project Image</span>
  </div>
  <div class="p-6">
    <h3 class="text-xl font-bold mb-2 text-[var(--color-primary)]">Project {projectNumber}</h3>
    <p class="text-[var(--color-text-muted)] mb-4">
      A brief description of this amazing project and the technologies used to build it.
    </p>
    <div class="flex gap-2 mb-4">
      {technologies.map((tech) => (
        <span class="px-2 py-1 text-xs rounded-full bg-[var(--color-secondary-light)] text-[var(--color-primary-dark)]">{tech}</span>
      ))}
    </div>
    <a href="#" class="text-[var(--color-primary)] hover:text-[var(--color-primary-dark)] font-medium">View Project â†’</a>
  </div>
</div>